name: End to End Test

on:
  push:

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
    # git checkout code
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.5.0
      with:
        config: hack/kind.yaml
        cluster_name: k8s
    - name: Test kind
      run: |
        kubectl get ns
    - uses: azure/setup-helm@v3
      id: install
    - name: Deploy lunettes
      run: |
        helm upgrade --install lunettes deploy/helm/lunettes/ \
          --set lunettesResources.requests.cpu=100m \
          --set lunettesResources.requests.memory=200Mi \
          --set enableAuditApiserver=true \
          --set lunettesType=NodePort \
          --set grafanadiType=NodePort \
          --set grafanaType=NodePort \
          --set jaegerType=NodePort
        # waiting for lunettes ready
        # TODO: check es ready
        for ((i=0; i<50; i++))
        do
          output=$(kubectl -n lunettes get pods -owide)
          echo "$output"
          pod_name=$(echo "$output" | awk '$1 ~ /^lunettes-/{print $1}')
          kubectl -n lunettes logs $pod_name
          sleep 1m
        done
    - name: Create test pod
      run: |
        kubectl run nginx --image=nginx
        sleep 30
        kubectl get pods
        sleep 5m
    - name: Test podinfo api with curl
      run: |
        response=$(curl -X GET "http://localhost:9099/podinfotable?searchkey=name&searchvalue=nginx")
        if echo "$response" | grep -q "nginx"; then
          echo "URL test passed"
        else
          echo "URL test failed"
          exit 1
        fi